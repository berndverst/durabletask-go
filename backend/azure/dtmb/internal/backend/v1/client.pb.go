// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: backend/v1/client.proto

package backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrchestrationIDReusePolicy_CreateOrchestrationAction int32

const (
	OrchestrationIDReusePolicy_ERROR     OrchestrationIDReusePolicy_CreateOrchestrationAction = 0
	OrchestrationIDReusePolicy_IGNORE    OrchestrationIDReusePolicy_CreateOrchestrationAction = 1
	OrchestrationIDReusePolicy_TERMINATE OrchestrationIDReusePolicy_CreateOrchestrationAction = 2
)

// Enum value maps for OrchestrationIDReusePolicy_CreateOrchestrationAction.
var (
	OrchestrationIDReusePolicy_CreateOrchestrationAction_name = map[int32]string{
		0: "ERROR",
		1: "IGNORE",
		2: "TERMINATE",
	}
	OrchestrationIDReusePolicy_CreateOrchestrationAction_value = map[string]int32{
		"ERROR":     0,
		"IGNORE":    1,
		"TERMINATE": 2,
	}
)

func (x OrchestrationIDReusePolicy_CreateOrchestrationAction) Enum() *OrchestrationIDReusePolicy_CreateOrchestrationAction {
	p := new(OrchestrationIDReusePolicy_CreateOrchestrationAction)
	*p = x
	return p
}

func (x OrchestrationIDReusePolicy_CreateOrchestrationAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrchestrationIDReusePolicy_CreateOrchestrationAction) Descriptor() protoreflect.EnumDescriptor {
	return file_backend_v1_client_proto_enumTypes[0].Descriptor()
}

func (OrchestrationIDReusePolicy_CreateOrchestrationAction) Type() protoreflect.EnumType {
	return &file_backend_v1_client_proto_enumTypes[0]
}

func (x OrchestrationIDReusePolicy_CreateOrchestrationAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrchestrationIDReusePolicy_CreateOrchestrationAction.Descriptor instead.
func (OrchestrationIDReusePolicy_CreateOrchestrationAction) EnumDescriptor() ([]byte, []int) {
	return file_backend_v1_client_proto_rawDescGZIP(), []int{2, 0}
}

type CreateOrchestrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique ID of the orchestration instance to create.
	OrchestrationId string `protobuf:"bytes,1,opt,name=orchestration_id,json=orchestrationId,proto3" json:"orchestration_id,omitempty"`
	// Name of the orchestration to start. Used by the SDK to dispatch to the correct orchestrator function.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Version of the orchestration to start. Used by the SDK to dispatch to the correct orchestrator function.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Optional orchestration input data.
	Input []byte `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	// Optionally make the orchestration start at a later time.
	// If not specified, the orchestration will start immediately.
	//
	// Types that are assignable to Delayed:
	//
	//	*CreateOrchestrationRequest_StartAt
	//	*CreateOrchestrationRequest_Delay
	Delayed isCreateOrchestrationRequest_Delayed `protobuf_oneof:"delayed"`
	// Policy for reusing existing orchestration IDs.
	IdReusePolicy *OrchestrationIDReusePolicy `protobuf:"bytes,20,opt,name=id_reuse_policy,json=idReusePolicy,proto3" json:"id_reuse_policy,omitempty"`
}

func (x *CreateOrchestrationRequest) Reset() {
	*x = CreateOrchestrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrchestrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrchestrationRequest) ProtoMessage() {}

func (x *CreateOrchestrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrchestrationRequest.ProtoReflect.Descriptor instead.
func (*CreateOrchestrationRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_client_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOrchestrationRequest) GetOrchestrationId() string {
	if x != nil {
		return x.OrchestrationId
	}
	return ""
}

func (x *CreateOrchestrationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateOrchestrationRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CreateOrchestrationRequest) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

func (m *CreateOrchestrationRequest) GetDelayed() isCreateOrchestrationRequest_Delayed {
	if m != nil {
		return m.Delayed
	}
	return nil
}

func (x *CreateOrchestrationRequest) GetStartAt() *timestamppb.Timestamp {
	if x, ok := x.GetDelayed().(*CreateOrchestrationRequest_StartAt); ok {
		return x.StartAt
	}
	return nil
}

func (x *CreateOrchestrationRequest) GetDelay() *durationpb.Duration {
	if x, ok := x.GetDelayed().(*CreateOrchestrationRequest_Delay); ok {
		return x.Delay
	}
	return nil
}

func (x *CreateOrchestrationRequest) GetIdReusePolicy() *OrchestrationIDReusePolicy {
	if x != nil {
		return x.IdReusePolicy
	}
	return nil
}

type isCreateOrchestrationRequest_Delayed interface {
	isCreateOrchestrationRequest_Delayed()
}

type CreateOrchestrationRequest_StartAt struct {
	// Absolute time at which the orchestration should start.
	StartAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=start_at,json=startAt,proto3,oneof"`
}

type CreateOrchestrationRequest_Delay struct {
	// Delay to start the orchestration from the current time
	Delay *durationpb.Duration `protobuf:"bytes,11,opt,name=delay,proto3,oneof"`
}

func (*CreateOrchestrationRequest_StartAt) isCreateOrchestrationRequest_Delayed() {}

func (*CreateOrchestrationRequest_Delay) isCreateOrchestrationRequest_Delayed() {}

type CreateOrchestrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the orchestration
	OrchestrationId string `protobuf:"bytes,1,opt,name=orchestration_id,json=orchestrationId,proto3" json:"orchestration_id,omitempty"`
	// ID of the execution
	ExecutionId string `protobuf:"bytes,2,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
}

func (x *CreateOrchestrationResponse) Reset() {
	*x = CreateOrchestrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrchestrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrchestrationResponse) ProtoMessage() {}

func (x *CreateOrchestrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrchestrationResponse.ProtoReflect.Descriptor instead.
func (*CreateOrchestrationResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_client_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOrchestrationResponse) GetOrchestrationId() string {
	if x != nil {
		return x.OrchestrationId
	}
	return ""
}

func (x *CreateOrchestrationResponse) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

type OrchestrationIDReusePolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The orchestration runtime statuses that can trigger the action.
	RuntimeStatus []OrchestrationStatus `protobuf:"varint,1,rep,packed,name=runtime_status,json=runtimeStatus,proto3,enum=dtmb.backend.v1.OrchestrationStatus" json:"runtime_status,omitempty"`
	// The action to take when the orchestration runtime status matches one of the statuses.
	Action OrchestrationIDReusePolicy_CreateOrchestrationAction `protobuf:"varint,2,opt,name=action,proto3,enum=dtmb.backend.v1.OrchestrationIDReusePolicy_CreateOrchestrationAction" json:"action,omitempty"`
}

func (x *OrchestrationIDReusePolicy) Reset() {
	*x = OrchestrationIDReusePolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrchestrationIDReusePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestrationIDReusePolicy) ProtoMessage() {}

func (x *OrchestrationIDReusePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestrationIDReusePolicy.ProtoReflect.Descriptor instead.
func (*OrchestrationIDReusePolicy) Descriptor() ([]byte, []int) {
	return file_backend_v1_client_proto_rawDescGZIP(), []int{2}
}

func (x *OrchestrationIDReusePolicy) GetRuntimeStatus() []OrchestrationStatus {
	if x != nil {
		return x.RuntimeStatus
	}
	return nil
}

func (x *OrchestrationIDReusePolicy) GetAction() OrchestrationIDReusePolicy_CreateOrchestrationAction {
	if x != nil {
		return x.Action
	}
	return OrchestrationIDReusePolicy_ERROR
}

type RaiseEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrchestrationId string `protobuf:"bytes,1,opt,name=orchestration_id,json=orchestrationId,proto3" json:"orchestration_id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Input           []byte `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *RaiseEventRequest) Reset() {
	*x = RaiseEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaiseEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaiseEventRequest) ProtoMessage() {}

func (x *RaiseEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaiseEventRequest.ProtoReflect.Descriptor instead.
func (*RaiseEventRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_client_proto_rawDescGZIP(), []int{3}
}

func (x *RaiseEventRequest) GetOrchestrationId() string {
	if x != nil {
		return x.OrchestrationId
	}
	return ""
}

func (x *RaiseEventRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RaiseEventRequest) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

type RaiseEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RaiseEventResponse) Reset() {
	*x = RaiseEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaiseEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaiseEventResponse) ProtoMessage() {}

func (x *RaiseEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaiseEventResponse.ProtoReflect.Descriptor instead.
func (*RaiseEventResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_client_proto_rawDescGZIP(), []int{4}
}

type GetOrchestrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrchestrationId string `protobuf:"bytes,1,opt,name=orchestration_id,json=orchestrationId,proto3" json:"orchestration_id,omitempty"`
}

func (x *GetOrchestrationRequest) Reset() {
	*x = GetOrchestrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrchestrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrchestrationRequest) ProtoMessage() {}

func (x *GetOrchestrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrchestrationRequest.ProtoReflect.Descriptor instead.
func (*GetOrchestrationRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_client_proto_rawDescGZIP(), []int{5}
}

func (x *GetOrchestrationRequest) GetOrchestrationId() string {
	if x != nil {
		return x.OrchestrationId
	}
	return ""
}

type GetOrchestrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionId         string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version             string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	OrchestrationStatus OrchestrationStatus    `protobuf:"varint,5,opt,name=orchestration_status,json=orchestrationStatus,proto3,enum=dtmb.backend.v1.OrchestrationStatus" json:"orchestration_status,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=last_updated_at,json=lastUpdatedAt,proto3" json:"last_updated_at,omitempty"`
	StartAt             *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	CompletedAt         *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	Input               []byte                 `protobuf:"bytes,20,opt,name=input,proto3" json:"input,omitempty"`
	Output              []byte                 `protobuf:"bytes,21,opt,name=output,proto3" json:"output,omitempty"`
	CustomStatus        string                 `protobuf:"bytes,22,opt,name=custom_status,json=customStatus,proto3" json:"custom_status,omitempty"`
	FailureDetails      *TaskFailureDetails    `protobuf:"bytes,30,opt,name=failure_details,json=failureDetails,proto3" json:"failure_details,omitempty"`
}

func (x *GetOrchestrationResponse) Reset() {
	*x = GetOrchestrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrchestrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrchestrationResponse) ProtoMessage() {}

func (x *GetOrchestrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrchestrationResponse.ProtoReflect.Descriptor instead.
func (*GetOrchestrationResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_client_proto_rawDescGZIP(), []int{6}
}

func (x *GetOrchestrationResponse) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *GetOrchestrationResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetOrchestrationResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetOrchestrationResponse) GetOrchestrationStatus() OrchestrationStatus {
	if x != nil {
		return x.OrchestrationStatus
	}
	return OrchestrationStatus_UNKNOWN
}

func (x *GetOrchestrationResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetOrchestrationResponse) GetLastUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedAt
	}
	return nil
}

func (x *GetOrchestrationResponse) GetStartAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartAt
	}
	return nil
}

func (x *GetOrchestrationResponse) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *GetOrchestrationResponse) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *GetOrchestrationResponse) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *GetOrchestrationResponse) GetCustomStatus() string {
	if x != nil {
		return x.CustomStatus
	}
	return ""
}

func (x *GetOrchestrationResponse) GetFailureDetails() *TaskFailureDetails {
	if x != nil {
		return x.FailureDetails
	}
	return nil
}

type PurgeOrchestrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*PurgeOrchestrationRequest_OrchestrationId
	//	*PurgeOrchestrationRequest_PurgeOrchestrationFilter_
	Request      isPurgeOrchestrationRequest_Request `protobuf_oneof:"request"`
	NonRecursive bool                                `protobuf:"varint,3,opt,name=non_recursive,json=nonRecursive,proto3" json:"non_recursive,omitempty"`
}

func (x *PurgeOrchestrationRequest) Reset() {
	*x = PurgeOrchestrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurgeOrchestrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeOrchestrationRequest) ProtoMessage() {}

func (x *PurgeOrchestrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeOrchestrationRequest.ProtoReflect.Descriptor instead.
func (*PurgeOrchestrationRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1_client_proto_rawDescGZIP(), []int{7}
}

func (m *PurgeOrchestrationRequest) GetRequest() isPurgeOrchestrationRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *PurgeOrchestrationRequest) GetOrchestrationId() string {
	if x, ok := x.GetRequest().(*PurgeOrchestrationRequest_OrchestrationId); ok {
		return x.OrchestrationId
	}
	return ""
}

func (x *PurgeOrchestrationRequest) GetPurgeOrchestrationFilter() *PurgeOrchestrationRequest_PurgeOrchestrationFilter {
	if x, ok := x.GetRequest().(*PurgeOrchestrationRequest_PurgeOrchestrationFilter_); ok {
		return x.PurgeOrchestrationFilter
	}
	return nil
}

func (x *PurgeOrchestrationRequest) GetNonRecursive() bool {
	if x != nil {
		return x.NonRecursive
	}
	return false
}

type isPurgeOrchestrationRequest_Request interface {
	isPurgeOrchestrationRequest_Request()
}

type PurgeOrchestrationRequest_OrchestrationId struct {
	OrchestrationId string `protobuf:"bytes,1,opt,name=orchestration_id,json=orchestrationId,proto3,oneof"`
}

type PurgeOrchestrationRequest_PurgeOrchestrationFilter_ struct {
	PurgeOrchestrationFilter *PurgeOrchestrationRequest_PurgeOrchestrationFilter `protobuf:"bytes,2,opt,name=purge_orchestration_filter,json=purgeOrchestrationFilter,proto3,oneof"`
}

func (*PurgeOrchestrationRequest_OrchestrationId) isPurgeOrchestrationRequest_Request() {}

func (*PurgeOrchestrationRequest_PurgeOrchestrationFilter_) isPurgeOrchestrationRequest_Request() {}

type PurgeOrchestrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedCount uint32 `protobuf:"varint,1,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
}

func (x *PurgeOrchestrationResponse) Reset() {
	*x = PurgeOrchestrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurgeOrchestrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeOrchestrationResponse) ProtoMessage() {}

func (x *PurgeOrchestrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeOrchestrationResponse.ProtoReflect.Descriptor instead.
func (*PurgeOrchestrationResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1_client_proto_rawDescGZIP(), []int{8}
}

func (x *PurgeOrchestrationResponse) GetDeletedCount() uint32 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

type PurgeOrchestrationRequest_PurgeOrchestrationFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedTimeFrom *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_time_from,json=createTimeFrom,proto3" json:"created_time_from,omitempty"`
	CreatedTimeTo   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_time_to,json=createTimeTo,proto3" json:"created_time_to,omitempty"`
	RuntimeStatus   []OrchestrationStatus  `protobuf:"varint,3,rep,packed,name=runtime_status,json=runtimeStatus,proto3,enum=dtmb.backend.v1.OrchestrationStatus" json:"runtime_status,omitempty"`
}

func (x *PurgeOrchestrationRequest_PurgeOrchestrationFilter) Reset() {
	*x = PurgeOrchestrationRequest_PurgeOrchestrationFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_client_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurgeOrchestrationRequest_PurgeOrchestrationFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeOrchestrationRequest_PurgeOrchestrationFilter) ProtoMessage() {}

func (x *PurgeOrchestrationRequest_PurgeOrchestrationFilter) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_client_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeOrchestrationRequest_PurgeOrchestrationFilter.ProtoReflect.Descriptor instead.
func (*PurgeOrchestrationRequest_PurgeOrchestrationFilter) Descriptor() ([]byte, []int) {
	return file_backend_v1_client_proto_rawDescGZIP(), []int{7, 0}
}

func (x *PurgeOrchestrationRequest_PurgeOrchestrationFilter) GetCreatedTimeFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeFrom
	}
	return nil
}

func (x *PurgeOrchestrationRequest_PurgeOrchestrationFilter) GetCreatedTimeTo() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimeTo
	}
	return nil
}

func (x *PurgeOrchestrationRequest_PurgeOrchestrationFilter) GetRuntimeStatus() []OrchestrationStatus {
	if x != nil {
		return x.RuntimeStatus
	}
	return nil
}

var File_backend_v1_client_proto protoreflect.FileDescriptor

var file_backend_v1_client_proto_rawDesc = []byte{
	0x0a, 0x17, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x64, 0x74, 0x6d, 0x62, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x02, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f,
	0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x53,
	0x0a, 0x0f, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x75, 0x73, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x75, 0x73, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x0d, 0x69, 0x64, 0x52, 0x65, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x22, 0x6b,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x8b, 0x02, 0x0a, 0x1a,
	0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x65, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x4b, 0x0a, 0x0e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5d, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x75, 0x73, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x45,
	0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x10, 0x02, 0x22, 0x68, 0x0a, 0x11, 0x52, 0x61, 0x69,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x61, 0x69, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0xda, 0x04, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a,
	0x14, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x64, 0x74,
	0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x13, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x42, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c,
	0x0a, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xf2, 0x03, 0x0a,
	0x19, 0x50, 0x75, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x10, 0x6f, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x83, 0x01, 0x0a, 0x1a, 0x70, 0x75, 0x72, 0x67,
	0x65, 0x5f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x64,
	0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x75, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x75, 0x72, 0x67, 0x65, 0x4f, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x18, 0x70, 0x75, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x6e, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69,
	0x76, 0x65, 0x1a, 0xf1, 0x01, 0x0a, 0x18, 0x50, 0x75, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x63, 0x68,
	0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x45, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x41, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x12, 0x4b, 0x0a, 0x0e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x41, 0x0a, 0x1a, 0x50, 0x75, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x32, 0x81, 0x04, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x75, 0x62,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x74,
	0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x52, 0x61, 0x69,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x69, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x74,
	0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61,
	0x69, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x67, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x12, 0x50, 0x75, 0x72,
	0x67, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x64, 0x74,
	0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75,
	0x72, 0x67, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74,
	0x2f, 0x64, 0x74, 0x6d, 0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0xaa, 0x02, 0x26, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x44,
	0x54, 0x4d, 0x42, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x6f,
	0x67, 0x65, 0x6e, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_backend_v1_client_proto_rawDescOnce sync.Once
	file_backend_v1_client_proto_rawDescData = file_backend_v1_client_proto_rawDesc
)

func file_backend_v1_client_proto_rawDescGZIP() []byte {
	file_backend_v1_client_proto_rawDescOnce.Do(func() {
		file_backend_v1_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_backend_v1_client_proto_rawDescData)
	})
	return file_backend_v1_client_proto_rawDescData
}

var file_backend_v1_client_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_backend_v1_client_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_backend_v1_client_proto_goTypes = []interface{}{
	(OrchestrationIDReusePolicy_CreateOrchestrationAction)(0),  // 0: dtmb.backend.v1.OrchestrationIDReusePolicy.CreateOrchestrationAction
	(*CreateOrchestrationRequest)(nil),                         // 1: dtmb.backend.v1.CreateOrchestrationRequest
	(*CreateOrchestrationResponse)(nil),                        // 2: dtmb.backend.v1.CreateOrchestrationResponse
	(*OrchestrationIDReusePolicy)(nil),                         // 3: dtmb.backend.v1.OrchestrationIDReusePolicy
	(*RaiseEventRequest)(nil),                                  // 4: dtmb.backend.v1.RaiseEventRequest
	(*RaiseEventResponse)(nil),                                 // 5: dtmb.backend.v1.RaiseEventResponse
	(*GetOrchestrationRequest)(nil),                            // 6: dtmb.backend.v1.GetOrchestrationRequest
	(*GetOrchestrationResponse)(nil),                           // 7: dtmb.backend.v1.GetOrchestrationResponse
	(*PurgeOrchestrationRequest)(nil),                          // 8: dtmb.backend.v1.PurgeOrchestrationRequest
	(*PurgeOrchestrationResponse)(nil),                         // 9: dtmb.backend.v1.PurgeOrchestrationResponse
	(*PurgeOrchestrationRequest_PurgeOrchestrationFilter)(nil), // 10: dtmb.backend.v1.PurgeOrchestrationRequest.PurgeOrchestrationFilter
	(*timestamppb.Timestamp)(nil),                              // 11: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),                                // 12: google.protobuf.Duration
	(OrchestrationStatus)(0),                                   // 13: dtmb.backend.v1.OrchestrationStatus
	(*TaskFailureDetails)(nil),                                 // 14: dtmb.backend.v1.TaskFailureDetails
	(*MetadataRequest)(nil),                                    // 15: dtmb.backend.v1.MetadataRequest
	(*MetadataResponse)(nil),                                   // 16: dtmb.backend.v1.MetadataResponse
}
var file_backend_v1_client_proto_depIdxs = []int32{
	11, // 0: dtmb.backend.v1.CreateOrchestrationRequest.start_at:type_name -> google.protobuf.Timestamp
	12, // 1: dtmb.backend.v1.CreateOrchestrationRequest.delay:type_name -> google.protobuf.Duration
	3,  // 2: dtmb.backend.v1.CreateOrchestrationRequest.id_reuse_policy:type_name -> dtmb.backend.v1.OrchestrationIDReusePolicy
	13, // 3: dtmb.backend.v1.OrchestrationIDReusePolicy.runtime_status:type_name -> dtmb.backend.v1.OrchestrationStatus
	0,  // 4: dtmb.backend.v1.OrchestrationIDReusePolicy.action:type_name -> dtmb.backend.v1.OrchestrationIDReusePolicy.CreateOrchestrationAction
	13, // 5: dtmb.backend.v1.GetOrchestrationResponse.orchestration_status:type_name -> dtmb.backend.v1.OrchestrationStatus
	11, // 6: dtmb.backend.v1.GetOrchestrationResponse.created_at:type_name -> google.protobuf.Timestamp
	11, // 7: dtmb.backend.v1.GetOrchestrationResponse.last_updated_at:type_name -> google.protobuf.Timestamp
	11, // 8: dtmb.backend.v1.GetOrchestrationResponse.start_at:type_name -> google.protobuf.Timestamp
	11, // 9: dtmb.backend.v1.GetOrchestrationResponse.completed_at:type_name -> google.protobuf.Timestamp
	14, // 10: dtmb.backend.v1.GetOrchestrationResponse.failure_details:type_name -> dtmb.backend.v1.TaskFailureDetails
	10, // 11: dtmb.backend.v1.PurgeOrchestrationRequest.purge_orchestration_filter:type_name -> dtmb.backend.v1.PurgeOrchestrationRequest.PurgeOrchestrationFilter
	11, // 12: dtmb.backend.v1.PurgeOrchestrationRequest.PurgeOrchestrationFilter.created_time_from:type_name -> google.protobuf.Timestamp
	11, // 13: dtmb.backend.v1.PurgeOrchestrationRequest.PurgeOrchestrationFilter.created_time_to:type_name -> google.protobuf.Timestamp
	13, // 14: dtmb.backend.v1.PurgeOrchestrationRequest.PurgeOrchestrationFilter.runtime_status:type_name -> dtmb.backend.v1.OrchestrationStatus
	15, // 15: dtmb.backend.v1.TaskHubClient.Metadata:input_type -> dtmb.backend.v1.MetadataRequest
	1,  // 16: dtmb.backend.v1.TaskHubClient.CreateOrchestration:input_type -> dtmb.backend.v1.CreateOrchestrationRequest
	4,  // 17: dtmb.backend.v1.TaskHubClient.RaiseEvent:input_type -> dtmb.backend.v1.RaiseEventRequest
	6,  // 18: dtmb.backend.v1.TaskHubClient.GetOrchestration:input_type -> dtmb.backend.v1.GetOrchestrationRequest
	8,  // 19: dtmb.backend.v1.TaskHubClient.PurgeOrchestration:input_type -> dtmb.backend.v1.PurgeOrchestrationRequest
	16, // 20: dtmb.backend.v1.TaskHubClient.Metadata:output_type -> dtmb.backend.v1.MetadataResponse
	2,  // 21: dtmb.backend.v1.TaskHubClient.CreateOrchestration:output_type -> dtmb.backend.v1.CreateOrchestrationResponse
	5,  // 22: dtmb.backend.v1.TaskHubClient.RaiseEvent:output_type -> dtmb.backend.v1.RaiseEventResponse
	7,  // 23: dtmb.backend.v1.TaskHubClient.GetOrchestration:output_type -> dtmb.backend.v1.GetOrchestrationResponse
	9,  // 24: dtmb.backend.v1.TaskHubClient.PurgeOrchestration:output_type -> dtmb.backend.v1.PurgeOrchestrationResponse
	20, // [20:25] is the sub-list for method output_type
	15, // [15:20] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_backend_v1_client_proto_init() }
func file_backend_v1_client_proto_init() {
	if File_backend_v1_client_proto != nil {
		return
	}
	file_backend_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_backend_v1_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrchestrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrchestrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrchestrationIDReusePolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaiseEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaiseEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrchestrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrchestrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurgeOrchestrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurgeOrchestrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_client_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurgeOrchestrationRequest_PurgeOrchestrationFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_backend_v1_client_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CreateOrchestrationRequest_StartAt)(nil),
		(*CreateOrchestrationRequest_Delay)(nil),
	}
	file_backend_v1_client_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*PurgeOrchestrationRequest_OrchestrationId)(nil),
		(*PurgeOrchestrationRequest_PurgeOrchestrationFilter_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backend_v1_client_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_v1_client_proto_goTypes,
		DependencyIndexes: file_backend_v1_client_proto_depIdxs,
		EnumInfos:         file_backend_v1_client_proto_enumTypes,
		MessageInfos:      file_backend_v1_client_proto_msgTypes,
	}.Build()
	File_backend_v1_client_proto = out.File
	file_backend_v1_client_proto_rawDesc = nil
	file_backend_v1_client_proto_goTypes = nil
	file_backend_v1_client_proto_depIdxs = nil
}
