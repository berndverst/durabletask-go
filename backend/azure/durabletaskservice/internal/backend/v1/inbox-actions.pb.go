// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: backend/v1/inbox-actions.proto

package backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InboxAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to InboxActionType:
	//
	//	*InboxAction_CreateOrchestration
	//	*InboxAction_ActivityCompleted
	//	*InboxAction_ActivityFailed
	//	*InboxAction_RaiseEvent
	InboxActionType isInboxAction_InboxActionType `protobuf_oneof:"inbox_action_type"`
}

func (x *InboxAction) Reset() {
	*x = InboxAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_inbox_actions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboxAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboxAction) ProtoMessage() {}

func (x *InboxAction) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_inbox_actions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboxAction.ProtoReflect.Descriptor instead.
func (*InboxAction) Descriptor() ([]byte, []int) {
	return file_backend_v1_inbox_actions_proto_rawDescGZIP(), []int{0}
}

func (m *InboxAction) GetInboxActionType() isInboxAction_InboxActionType {
	if m != nil {
		return m.InboxActionType
	}
	return nil
}

func (x *InboxAction) GetCreateOrchestration() *CreateOrchestrationInboxAction {
	if x, ok := x.GetInboxActionType().(*InboxAction_CreateOrchestration); ok {
		return x.CreateOrchestration
	}
	return nil
}

func (x *InboxAction) GetActivityCompleted() *ActivityCompletedInboxAction {
	if x, ok := x.GetInboxActionType().(*InboxAction_ActivityCompleted); ok {
		return x.ActivityCompleted
	}
	return nil
}

func (x *InboxAction) GetActivityFailed() *ActivityFailedInboxAction {
	if x, ok := x.GetInboxActionType().(*InboxAction_ActivityFailed); ok {
		return x.ActivityFailed
	}
	return nil
}

func (x *InboxAction) GetRaiseEvent() *RaiseEventInboxAction {
	if x, ok := x.GetInboxActionType().(*InboxAction_RaiseEvent); ok {
		return x.RaiseEvent
	}
	return nil
}

type isInboxAction_InboxActionType interface {
	isInboxAction_InboxActionType()
}

type InboxAction_CreateOrchestration struct {
	CreateOrchestration *CreateOrchestrationInboxAction `protobuf:"bytes,100,opt,name=create_orchestration,json=createOrchestration,proto3,oneof"`
}

type InboxAction_ActivityCompleted struct {
	ActivityCompleted *ActivityCompletedInboxAction `protobuf:"bytes,101,opt,name=activity_completed,json=activityCompleted,proto3,oneof"`
}

type InboxAction_ActivityFailed struct {
	ActivityFailed *ActivityFailedInboxAction `protobuf:"bytes,102,opt,name=activity_failed,json=activityFailed,proto3,oneof"`
}

type InboxAction_RaiseEvent struct {
	RaiseEvent *RaiseEventInboxAction `protobuf:"bytes,103,opt,name=raise_event,json=raiseEvent,proto3,oneof"`
}

func (*InboxAction_CreateOrchestration) isInboxAction_InboxActionType() {}

func (*InboxAction_ActivityCompleted) isInboxAction_InboxActionType() {}

func (*InboxAction_ActivityFailed) isInboxAction_InboxActionType() {}

func (*InboxAction_RaiseEvent) isInboxAction_InboxActionType() {}

// An orchestration is starting
type CreateOrchestrationInboxAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the orchestration
	OrchestrationId string `protobuf:"bytes,1,opt,name=orchestration_id,json=orchestrationId,proto3" json:"orchestration_id,omitempty"`
	// Name of the orchestration to start
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Version of the orchestration to start
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// Optionally make the orchestration start at a later time.
	// If not specified, the orchestration will start immediately.
	StartAt *Delay `protobuf:"bytes,10,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	// Parent orchestration (optional)
	Parent *ParentInstanceInfo `protobuf:"bytes,20,opt,name=parent,proto3" json:"parent,omitempty"`
	// Trace context (optional)
	TraceContext *TraceContext `protobuf:"bytes,30,opt,name=trace_context,json=traceContext,proto3" json:"trace_context,omitempty"`
}

func (x *CreateOrchestrationInboxAction) Reset() {
	*x = CreateOrchestrationInboxAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_inbox_actions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrchestrationInboxAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrchestrationInboxAction) ProtoMessage() {}

func (x *CreateOrchestrationInboxAction) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_inbox_actions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrchestrationInboxAction.ProtoReflect.Descriptor instead.
func (*CreateOrchestrationInboxAction) Descriptor() ([]byte, []int) {
	return file_backend_v1_inbox_actions_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOrchestrationInboxAction) GetOrchestrationId() string {
	if x != nil {
		return x.OrchestrationId
	}
	return ""
}

func (x *CreateOrchestrationInboxAction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateOrchestrationInboxAction) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CreateOrchestrationInboxAction) GetStartAt() *Delay {
	if x != nil {
		return x.StartAt
	}
	return nil
}

func (x *CreateOrchestrationInboxAction) GetParent() *ParentInstanceInfo {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *CreateOrchestrationInboxAction) GetTraceContext() *TraceContext {
	if x != nil {
		return x.TraceContext
	}
	return nil
}

// A scheduled activity has completed successfully.
type ActivityCompletedInboxAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sequence number of the event that scheduled this activity
	RelatedSequenceNumber int64 `protobuf:"varint,1,opt,name=related_sequence_number,json=relatedSequenceNumber,proto3" json:"related_sequence_number,omitempty"`
}

func (x *ActivityCompletedInboxAction) Reset() {
	*x = ActivityCompletedInboxAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_inbox_actions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityCompletedInboxAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityCompletedInboxAction) ProtoMessage() {}

func (x *ActivityCompletedInboxAction) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_inbox_actions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityCompletedInboxAction.ProtoReflect.Descriptor instead.
func (*ActivityCompletedInboxAction) Descriptor() ([]byte, []int) {
	return file_backend_v1_inbox_actions_proto_rawDescGZIP(), []int{2}
}

func (x *ActivityCompletedInboxAction) GetRelatedSequenceNumber() int64 {
	if x != nil {
		return x.RelatedSequenceNumber
	}
	return 0
}

// A scheduled activity has failed.
type ActivityFailedInboxAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sequence number of the event that scheduled this activity
	RelatedSequenceNumber int64           `protobuf:"varint,1,opt,name=related_sequence_number,json=relatedSequenceNumber,proto3" json:"related_sequence_number,omitempty"`
	FailureDetails        *FailureDetails `protobuf:"bytes,2,opt,name=failure_details,json=failureDetails,proto3" json:"failure_details,omitempty"`
}

func (x *ActivityFailedInboxAction) Reset() {
	*x = ActivityFailedInboxAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_inbox_actions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityFailedInboxAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityFailedInboxAction) ProtoMessage() {}

func (x *ActivityFailedInboxAction) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_inbox_actions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityFailedInboxAction.ProtoReflect.Descriptor instead.
func (*ActivityFailedInboxAction) Descriptor() ([]byte, []int) {
	return file_backend_v1_inbox_actions_proto_rawDescGZIP(), []int{3}
}

func (x *ActivityFailedInboxAction) GetRelatedSequenceNumber() int64 {
	if x != nil {
		return x.RelatedSequenceNumber
	}
	return 0
}

func (x *ActivityFailedInboxAction) GetFailureDetails() *FailureDetails {
	if x != nil {
		return x.FailureDetails
	}
	return nil
}

// An event has been risen.
type RaiseEventInboxAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Event name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RaiseEventInboxAction) Reset() {
	*x = RaiseEventInboxAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1_inbox_actions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaiseEventInboxAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaiseEventInboxAction) ProtoMessage() {}

func (x *RaiseEventInboxAction) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1_inbox_actions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaiseEventInboxAction.ProtoReflect.Descriptor instead.
func (*RaiseEventInboxAction) Descriptor() ([]byte, []int) {
	return file_backend_v1_inbox_actions_proto_rawDescGZIP(), []int{4}
}

func (x *RaiseEventInboxAction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_backend_v1_inbox_actions_proto protoreflect.FileDescriptor

var file_backend_v1_inbox_actions_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x62,
	0x6f, 0x78, 0x2d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x1a, 0x17, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x03, 0x0a, 0x0b, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x64, 0x0a, 0x14, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x62, 0x6f, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x5e, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64,
	0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x49, 0x6e, 0x62, 0x6f, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x55, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x74, 0x6d, 0x62,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x0b, 0x72, 0x61, 0x69, 0x73, 0x65,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64,
	0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x61, 0x69, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x69, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xad, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x74, 0x6d,
	0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x56, 0x0a, 0x1c, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f,
	0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x9d, 0x01, 0x0a, 0x19, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a,
	0x17, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x64, 0x74, 0x6d, 0x62, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x2b, 0x0a, 0x15, 0x52, 0x61, 0x69, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x62,
	0x6f, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x5a, 0x36,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x73, 0x6f, 0x66, 0x74, 0x2f, 0x64, 0x74, 0x6d, 0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0xaa, 0x02, 0x26, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f,
	0x66, 0x74, 0x2e, 0x44, 0x54, 0x4d, 0x42, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x41, 0x75, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_backend_v1_inbox_actions_proto_rawDescOnce sync.Once
	file_backend_v1_inbox_actions_proto_rawDescData = file_backend_v1_inbox_actions_proto_rawDesc
)

func file_backend_v1_inbox_actions_proto_rawDescGZIP() []byte {
	file_backend_v1_inbox_actions_proto_rawDescOnce.Do(func() {
		file_backend_v1_inbox_actions_proto_rawDescData = protoimpl.X.CompressGZIP(file_backend_v1_inbox_actions_proto_rawDescData)
	})
	return file_backend_v1_inbox_actions_proto_rawDescData
}

var file_backend_v1_inbox_actions_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_backend_v1_inbox_actions_proto_goTypes = []interface{}{
	(*InboxAction)(nil),                    // 0: dtmb.backend.v1.InboxAction
	(*CreateOrchestrationInboxAction)(nil), // 1: dtmb.backend.v1.CreateOrchestrationInboxAction
	(*ActivityCompletedInboxAction)(nil),   // 2: dtmb.backend.v1.ActivityCompletedInboxAction
	(*ActivityFailedInboxAction)(nil),      // 3: dtmb.backend.v1.ActivityFailedInboxAction
	(*RaiseEventInboxAction)(nil),          // 4: dtmb.backend.v1.RaiseEventInboxAction
	(*Delay)(nil),                          // 5: dtmb.backend.v1.Delay
	(*ParentInstanceInfo)(nil),             // 6: dtmb.backend.v1.ParentInstanceInfo
	(*TraceContext)(nil),                   // 7: dtmb.backend.v1.TraceContext
	(*FailureDetails)(nil),                 // 8: dtmb.backend.v1.FailureDetails
}
var file_backend_v1_inbox_actions_proto_depIdxs = []int32{
	1, // 0: dtmb.backend.v1.InboxAction.create_orchestration:type_name -> dtmb.backend.v1.CreateOrchestrationInboxAction
	2, // 1: dtmb.backend.v1.InboxAction.activity_completed:type_name -> dtmb.backend.v1.ActivityCompletedInboxAction
	3, // 2: dtmb.backend.v1.InboxAction.activity_failed:type_name -> dtmb.backend.v1.ActivityFailedInboxAction
	4, // 3: dtmb.backend.v1.InboxAction.raise_event:type_name -> dtmb.backend.v1.RaiseEventInboxAction
	5, // 4: dtmb.backend.v1.CreateOrchestrationInboxAction.start_at:type_name -> dtmb.backend.v1.Delay
	6, // 5: dtmb.backend.v1.CreateOrchestrationInboxAction.parent:type_name -> dtmb.backend.v1.ParentInstanceInfo
	7, // 6: dtmb.backend.v1.CreateOrchestrationInboxAction.trace_context:type_name -> dtmb.backend.v1.TraceContext
	8, // 7: dtmb.backend.v1.ActivityFailedInboxAction.failure_details:type_name -> dtmb.backend.v1.FailureDetails
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_backend_v1_inbox_actions_proto_init() }
func file_backend_v1_inbox_actions_proto_init() {
	if File_backend_v1_inbox_actions_proto != nil {
		return
	}
	file_backend_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_backend_v1_inbox_actions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboxAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_inbox_actions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrchestrationInboxAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_inbox_actions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityCompletedInboxAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_inbox_actions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityFailedInboxAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1_inbox_actions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaiseEventInboxAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_backend_v1_inbox_actions_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*InboxAction_CreateOrchestration)(nil),
		(*InboxAction_ActivityCompleted)(nil),
		(*InboxAction_ActivityFailed)(nil),
		(*InboxAction_RaiseEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backend_v1_inbox_actions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_backend_v1_inbox_actions_proto_goTypes,
		DependencyIndexes: file_backend_v1_inbox_actions_proto_depIdxs,
		MessageInfos:      file_backend_v1_inbox_actions_proto_msgTypes,
	}.Build()
	File_backend_v1_inbox_actions_proto = out.File
	file_backend_v1_inbox_actions_proto_rawDesc = nil
	file_backend_v1_inbox_actions_proto_goTypes = nil
	file_backend_v1_inbox_actions_proto_depIdxs = nil
}
